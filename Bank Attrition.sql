SELECT * FROM ['Bank-Customer-Attrition-Insight$']

SELECT *, ROW_NUMBER() OVER(PARTITION BY ROWNUMBER, CUSTOMERID, SURNAME, CREDITSCORE, GEOGRAPHY, GENDER, AGE, TENURE, BALANCE, NUMOFPRODUCTS,
HASCRCARD, ISACTIVEMEMBER, ESTIMATEDSALARY, EXITED, COMPLAIN, [SATISFACTION SCORE], [CARD TYPE], [POINT EARNED] ORDER BY ROWNUMBER) ROW_NUM
FROM ['Bank-Customer-Attrition-Insight$']

WITH ATTRITION AS (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROWNUMBER, CUSTOMERID, SURNAME, CREDITSCORE, GEOGRAPHY, GENDER, AGE, TENURE, BALANCE, NUMOFPRODUCTS,
HASCRCARD, ISACTIVEMEMBER, ESTIMATEDSALARY, EXITED, COMPLAIN, [SATISFACTION SCORE], [CARD TYPE], [POINT EARNED] ORDER BY ROWNUMBER) ROW_NUM
FROM ['Bank-Customer-Attrition-Insight$'])

SELECT * FROM ATTRITION WHERE ROW_NUM > 1

--SO FROM THE ABOVE, WE FIND THERE ARE NO DUPLICATE VALUES TO BEGIN WITH WHICH IS GOOD

--LET'S CHECK THE COLUMNS AND DO SOME STANDARDIZATION

SELECT DISTINCT ROWNUMBER FROM ['Bank-Customer-Attrition-Insight$']
SELECT DISTINCT CUSTOMERID FROM ['Bank-Customer-Attrition-Insight$']
SELECT DISTINCT SURNAME FROM ['Bank-Customer-Attrition-Insight$']
--SURNAME MIGHT HAVE PEOPLE WITH MORE THAN 1 ACCOUNTS OR CUSTOMERIDS
SELECT DISTINCT CREDITSCORE FROM ['Bank-Customer-Attrition-Insight$'] ORDER BY CREDITSCORE ASC
--350 - 850
SELECT DISTINCT GEOGRAPHY FROM ['Bank-Customer-Attrition-Insight$']
--3 GERMANY, FRANCE AND SPAIN
SELECT DISTINCT GENDER FROM ['Bank-Customer-Attrition-Insight$']
--MALE AND FEMALE ONLY
SELECT DISTINCT AGE FROM ['Bank-Customer-Attrition-Insight$'] ORDER BY AGE ASC
--18-92 YEARS OF AGE
SELECT DISTINCT TENURE FROM ['Bank-Customer-Attrition-Insight$'] ORDER BY TENURE ASC
--TENURE 0-10 YEARS
SELECT DISTINCT BALANCE FROM ['Bank-Customer-Attrition-Insight$'] ORDER BY BALANCE ASC
SELECT DISTINCT NUMOFPRODUCTS FROM ['Bank-Customer-Attrition-Insight$']
--1-4 PRODUCTS
SELECT DISTINCT HASCRCARD FROM ['Bank-Customer-Attrition-Insight$']
--0 and 1 change to yes or no
SELECT DISTINCT ISACTIVEMEMBER FROM ['Bank-Customer-Attrition-Insight$']
--0 and 1 change to yes and no
SELECT DISTINCT ESTIMATEDSALARY FROM ['Bank-Customer-Attrition-Insight$'] ORDER BY ESTIMATEDSALARY DESC
SELECT DISTINCT EXITED FROM ['Bank-Customer-Attrition-Insight$']
--0 AND 1 CHANGE TO YES OR NO
SELECT DISTINCT COMPLAIN FROM ['Bank-Customer-Attrition-Insight$']
--0 AND 1 CHANGE TO YES OR NO
SELECT DISTINCT [SATISFACTION SCORE] FROM ['Bank-Customer-Attrition-Insight$'] ORDER BY [SATISFACTION SCORE] ASC
--1 - 5 MAKE IT MORE PROPER
SELECT DISTINCT [CARD TYPE] FROM ['Bank-Customer-Attrition-Insight$']
--4 TYPES(SILVER, DIAMOND, GOLD AND PLATINUM)
SELECT DISTINCT [POINT EARNED] FROM ['Bank-Customer-Attrition-Insight$'] ORDER BY [POINT EARNED] DESC

--SO, FIRST WE WANNA STANDARDIZE THESE EASY ONES BEFORE MOVING FORWARD

SELECT DISTINCT HASCRCARD FROM ['Bank-Customer-Attrition-Insight$']
--0 and 1 change to yes or no

SELECT HASCRCARD, IIF(HASCRCARD = 0, 'No', 'Yes') Has_Credit_Card FROM ['Bank-Customer-Attrition-Insight$']

ALTER TABLE ['Bank-Customer-Attrition-Insight$']
ADD Has_Credit_Card VARCHAR(50)

UPDATE ['Bank-Customer-Attrition-Insight$']
SET Has_Credit_Card = IIF(HASCRCARD = 0, 'No', 'Yes')

SELECT DISTINCT ISACTIVEMEMBER FROM ['Bank-Customer-Attrition-Insight$']
--0 and 1 change to yes and no
SELECT ISACTIVEMEMBER, IIF(ISACTIVEMEMBER = 0, 'Not Anymore', 'Still Active') Is_Still_Active FROM ['Bank-Customer-Attrition-Insight$']

ALTER TABLE ['Bank-Customer-Attrition-Insight$']
ADD Is_Still_Active VARCHAR(100)

UPDATE ['Bank-Customer-Attrition-Insight$']
SET Is_Still_Active = IIF(ISACTIVEMEMBER = 0, 'Not Anymore', 'Still Active')




SELECT DISTINCT COMPLAIN FROM ['Bank-Customer-Attrition-Insight$']
--0 AND 1 CHANGE TO YES OR NO
SELECT COMPLAIN, IIF(COMPLAIN = 0, 'No Complains', 'Complains') AS Any_Complains FROM ['Bank-Customer-Attrition-Insight$']

ALTER TABLE ['Bank-Customer-Attrition-Insight$']
ADD Any_Complains VARCHAR(100)

UPDATE ['Bank-Customer-Attrition-Insight$']
SET Any_Complains = IIF(COMPLAIN = 0, 'No Complains', 'Complains')

ALTER TABLE ['Bank-Customer-Attrition-Insight$']
DROP COLUMN HASCRCARD, ISACTIVEMEMBER, COMPLAIN




--NOW WE WANNA GROUP THE CREDITSCORE AND AGE COLUMN INTO SOMETHING WE CAN MAKE SENSE OUT OF RIGHT
--FOR CREDIT SCORE, 350-450, WE CALL IT THAT, THEN 451-600 ALSO THAT ABOVE 600, WE CALL THAT ABOVE 600
--NOW FOR AGE, 18-30, THAT, 31-50 THAT, 51-75, THAT AND ABOVE 75 SO LET'S GOO
SELECT CREDITSCORE,
CASE
WHEN CREDITSCORE < 451 THEN '350-450'
WHEN CREDITSCORE BETWEEN 450 AND 601 THEN '451-600'
ELSE 'Above 600'
END AS Credit_Score_Bracket FROM ['Bank-Customer-Attrition-Insight$']

ALTER TABLE ['Bank-Customer-Attrition-Insight$']
ADD Credit_Score_Bracket NVARCHAR(100)

UPDATE ['Bank-Customer-Attrition-Insight$']
SET  Credit_Score_Bracket = CASE
WHEN CREDITSCORE < 451 THEN '350-450'
WHEN CREDITSCORE BETWEEN 450 AND 601 THEN '451-600'
ELSE 'Above 600'
END

--SAME FOR AGE BRACKET
SELECT AGE,
CASE
WHEN AGE < 31 THEN '18-30'
WHEN AGE BETWEEN 30 AND 51 THEN '31-50'
WHEN AGE BETWEEN 50 AND 76 THEN '51-75'
ELSE 'ABOVE 75'
END AS Age_Bracket FROM ['Bank-Customer-Attrition-Insight$']

ALTER TABLE ['Bank-Customer-Attrition-Insight$']
ADD Age_Bracket NVARCHAR(100)

UPDATE ['Bank-Customer-Attrition-Insight$']
SET Age_Bracket = CASE
WHEN AGE < 31 THEN '18-30'
WHEN AGE BETWEEN 30 AND 51 THEN '31-50'
WHEN AGE BETWEEN 50 AND 76 THEN '51-75'
ELSE 'ABOVE 75'
END

ALTER TABLE ['Bank-Customer-Attrition-Insight$']
DROP COLUMN AGE, CREDITSCORE

--SORRY LET'S WORK ON THE EXITED COLUMN CHANGING IT TO YES OR NO
SELECT EXITED, IIF(EXITED = 1, 'Yes', 'No') As Exited_New FROM ['Bank-Customer-Attrition-Insight$']

ALTER TABLE ['Bank-Customer-Attrition-Insight$']
ADD Exited_New VARCHAR(50)

UPDATE ['Bank-Customer-Attrition-Insight$']
SET Exited_New = IIF(EXITED = 1, 'Yes', 'No')

ALTER TABLE ['Bank-Customer-Attrition-Insight$']
DROP COLUMN EXITED


--I FIGURED MAYBE WE SHOULD DO SOMETHING ABOUT THE SATISFACTION SCORE COLUMN RIGHT? 1,2,3,4,5 DOESNT REALLY SIT WELL
SELECT [SATISFACTION SCORE], 
CASE
WHEN [SATISFACTION SCORE] = 1 THEN 'Very Bad'
WHEN [SATISFACTION SCORE] = 2 THEN 'Bad'
WHEN [SATISFACTION SCORE] = 3 THEN 'Good'
WHEN [SATISFACTION SCORE] = 4 THEN 'Very Good'
ELSE 'Excellent'
END AS Satisfaction_Score FROM ['Bank-Customer-Attrition-Insight$']

ALTER TABLE ['Bank-Customer-Attrition-Insight$']
ADD Satisfaction_Score VARCHAR(50)

UPDATE ['Bank-Customer-Attrition-Insight$']
SET Satisfaction_Score = CASE
WHEN [SATISFACTION SCORE] = 1 THEN 'Very Bad'
WHEN [SATISFACTION SCORE] = 2 THEN 'Bad'
WHEN [SATISFACTION SCORE] = 3 THEN 'Good'
WHEN [SATISFACTION SCORE] = 4 THEN 'Very Good'
ELSE 'Excellent'
END

ALTER TABLE ['Bank-Customer-Attrition-Insight$']
DROP COLUMN [SATISFACTION SCORE]


--I WANNA ADD A DATE COLUMN TO THIS AND TRY MY HANDS ON SOMETHING
SELECT GETDATE() AS Today_Date

ALTER TABLE ['Bank-Customer-Attrition-Insight$']
ADD Today_Date Date

UPDATE ['Bank-Customer-Attrition-Insight$']
SET Today_Date = GETDATE()


SELECT * FROM ['Bank-Customer-Attrition-Insight$']

--NOW TIME FOR US TO DO SOME REAL ANALYSIS.

--1 HOW MANY CUSTOMERS DOES THIS BANK HAVE?
SELECT COUNT(DISTINCT ROWNUMBER) CUSTOMER_COUNT FROM ['Bank-Customer-Attrition-Insight$']

--2. FIND THE NUMBER OF CUSTOMERS PER REGION AND THE ESTIMATED SALARIES OR WHICH REGION IS CONTRIBUTING THE HIGHEST AMOUNT
SELECT DISTINCT(GEOGRAPHY), COUNT(ROWNUMBER) COUNT FROM ['Bank-Customer-Attrition-Insight$']
GROUP BY GEOGRAPHY
ORDER BY COUNT ASC

--3. FIND THE TOTAL, AVERAGE, HIGHEST AND LOWEST ESTIMATED SALARY DETAILS
SELECT SUM(ESTIMATEDSALARY) TOTAL_SAL, AVG(ESTIMATEDSALARY) AVG_SALARY, MAX(ESTIMATEDSALARY) HIGHEST_SAL, 
MIN(ESTIMATEDSALARY) LOWEST_SAL FROM ['Bank-Customer-Attrition-Insight$']

--4 FIND THE TOTAL, AVERAGE, HIGHEST AND LOWEST BALANCES DETAILS
SELECT SUM(BALANCE) TOTAL_BAL, AVG(Balance) AVG_BAL, MAX(Balance) HIGHEST_BAL, 
MIN(Balance) LOWEST_BAL FROM ['Bank-Customer-Attrition-Insight$']

--5 HOW MANY CUSTOMERS PURCHASED HOW MANY PRODUCTS FROM THE BANK?
SELECT NUMOFPRODUCTS, COUNT(ROWNUMBER) COUNT FROM ['Bank-Customer-Attrition-Insight$']
GROUP BY NumOfProducts
ORDER BY COUNT DESC

--6 FIND THE TOTAL CUSTOMERS PER CARD TYPE AND GEOGRAPHY
SELECT GEOGRAPHY, [CARD TYPE], COUNT(ROWNUMBER) COUNT FROM ['Bank-Customer-Attrition-Insight$']
GROUP BY GEOGRAPHY, [CARD TYPE]
ORDER BY COUNT DESC

--7 WHAT IS THE TOTAL ATTRITION NUMBER?
SELECT COUNT(ROWNUMBER) COUNT FROM ['Bank-Customer-Attrition-Insight$']
WHERE EXITED_NEW = 'YES'

--8 CALCULATE THE PERCENTAGE ATTRITION RATE IN THIS BANK

--9 WHICH AGE BRACKET HAS THE HIGHEST NUMBER OF ATTRITION?
SELECT AGE_BRACKET, COUNT(ROWNUMBER) COUNT FROM ['Bank-Customer-Attrition-Insight$']
GROUP BY AGE_BRACKET
ORDER BY COUNT ASC

--10 HOW MANY ATTRITION CUSTOMERS HAD CREDIT CARDS?
SELECT COUNT(ROWNUMBER) COUNT FROM ['Bank-Customer-Attrition-Insight$']
WHERE EXITED_NEW = 'YES' AND Has_Credit_Card = 'YES'

--11 WHAT IS THE TOTAL AMOUNT LOST PER THE ATTRITION?
SELECT SUM(BALANCE) AMT_LOST FROM ['Bank-Customer-Attrition-Insight$']
WHERE EXITED_NEW = 'YES'

--12 HOW MANY MALES TO FEMALES HAVE STOPPED BEING THE BANK'S CLIENTS?
SELECT DISTINCT(GENDER), COUNT(ROWNUMBER) COUNT FROM ['Bank-Customer-Attrition-Insight$']
WHERE EXITED_NEW = 'YES'
GROUP BY GENDER

--13 FIND THE TOTAL ATTRITED CUSTOMERS PER CREDIT SCORE
SELECT CREDIT_SCORE_BRACKET, COUNT(ROWNUMBER) COUNT FROM ['Bank-Customer-Attrition-Insight$']
WHERE Exited_New = 'YES'
GROUP BY Credit_Score_Bracket
ORDER BY COUNT ASC

--14 FIND THE TOTAL NUMBER OF CUSTOMERS WHO AREN'T ACTIVELY WORKING WITH THE BANK ANYMORE
SELECT COUNT(RowNumber) COUNT FROM ['Bank-Customer-Attrition-Insight$']
WHERE IS_STILL_ACTIVE = 'NOT ANYMORE'

--15 FIND THE INDIVIDUAL DETAILS OF THE TOP 5 AND BOTTOM 5 CUSTOMERS BY BALANCE AND ESTIMATED SALARIES
SELECT TOP 5 Surname, SUM(BALANCE) BALANCE, SUM(ESTIMATEDSALARY) SAL FROM ['Bank-Customer-Attrition-Insight$']
GROUP BY Surname
ORDER BY BALANCE, SAL DESC

--15 FIND THE INDIVIDUAL DETAILS OF THE TOP 5 AND BOTTOM 5 CUSTOMERS BY BALANCE AND ESTIMATED SALARIES
SELECT TOP 5 Surname, SUM(BALANCE) BALANCE, SUM(ESTIMATEDSALARY) SAL FROM ['Bank-Customer-Attrition-Insight$']
GROUP BY Surname
ORDER BY BALANCE, SAL ASC

--16 WHICH MONTH, YEAR AND DAY DID WE HAVE THE MOST ATTRITION COUNTS?
SELECT YEAR(TODAY_DATE) YEAR1, MONTH(TODAY_DATE) MONTH1, DAY(TODAY_DATE) DAY1, COUNT(ROWNUMBER) COUNT
FROM ['Bank-Customer-Attrition-Insight$']
WHERE EXITED_NEW = 'YES'
GROUP BY YEAR1, MONTH1, DAY1
ORDER BY COUNT

--17 HOW MANY CUSTOMERS HAVE THEIR ACCOUNT IDS STILL ACTIVE?
SELECT SURNAME, CUSTOMERID, GENDER, BALANCE, ESTIMATEDSALARY, TENURE FROM ['Bank-Customer-Attrition-Insight$']
WHERE Is_Still_Active = 'STILL ACTIVE'


--18 HOW LONG DID THESE ATTRITION CUSTOMERS STAY WITH THE BANK?
SELECT TENURE, COUNT(ROWNUMBER) COUNT FROM ['Bank-Customer-Attrition-Insight$']
WHERE EXITED_NEW = 'YES'
GROUP BY Tenure
ORDER BY COUNT DESC

--19 FIND THE TOTAL BALANCE OF PEOPLE WHOSE NAMES STARTS WITH B AND ESTIMATED BALANCE IS MORE THAN THE AVERAGE ESTIMATED SALARY
SELECT SURNAME, CUSTOMERID, GENDER, SUM(BALANCE) BAL, SUM(ESTIMATEDSALARY) SAL FROM ['Bank-Customer-Attrition-Insight$']
WHERE ESTIMATEDSALARY > (SELECT AVG(ESTIMATEDSALARY) FROM ['Bank-Customer-Attrition-Insight$'] WHERE SURNAME LIKE 'B%')
GROUP BY SURNAME, CUSTOMERID, GENDER

--20 WHO HAS THE SECOND OR THIRD HIGHEST BALANCE IN THE BANK?
SELECT TOP 1 SURNAME,GENDER, CUSTOMERID, MAX(BALANCE) BAL, SUM(ESTIMATEDSALARY) SAL FROM ['Bank-Customer-Attrition-Insight$']
WHERE BALANCE < (SELECT MAX(BALANCE) FROM ['Bank-Customer-Attrition-Insight$'])
GROUP BY SURNAME,GENDER, CUSTOMERID
ORDER BY BAL DESC


--21 RANK THE CUSOMTERS ACCORDING TO THE HIGHEST DOWN TO THE LOWEST BALANCE.
SELECT *, ROW_NUMBER() OVER(ORDER BY BALANCE DESC) RANKING FROM ['Bank-Customer-Attrition-Insight$']

SELECT * FROM ['Bank-Customer-Attrition-Insight$']

CREATE VIEW BANK_ATTRITION AS (SELECT * FROM ['Bank-Customer-Attrition-Insight$'])

SELECT * FROM BANK_ATTRITION